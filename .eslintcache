[{"C:\\Users\\avivk\\Documents\\GitHub\\ui\\src\\App.js":"1","C:\\Users\\avivk\\Documents\\GitHub\\ui\\src\\reportWebVitals.js":"2","C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\components\\App.js":"3","C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\components\\Notifications.js":"4","C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\components\\NetworkInfoForm.js":"5","C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\index.js":"6"},{"size":342,"mtime":1610293024724,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1606938893917,"results":"9","hashOfConfig":"8"},{"size":2230,"mtime":1610299541728,"results":"10","hashOfConfig":"11"},{"size":792,"mtime":1610299882847,"results":"12","hashOfConfig":"11"},{"size":2325,"mtime":1610305441563,"results":"13","hashOfConfig":"11"},{"size":229,"mtime":1610298131063,"results":"14","hashOfConfig":"11"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j3wtlm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"8ipnd8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\avivk\\Documents\\GitHub\\ui\\src\\App.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\ui\\src\\reportWebVitals.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\components\\App.js",["30"],"import React from 'react';\r\nimport { Navbar, Provider, Container } from 'rendition';\r\nimport { NetworkInfoForm } from './NetworkInfoForm';\r\nimport { Notifications } from './Notifications';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\tbody {\r\n\t\tmargin: 0;\r\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n\t\t\t'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n\t\t\tsans-serif;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t}\r\n\r\n\tcode {\r\n\t\tfont-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n\t}\r\n`;\r\n\r\n\r\n\r\nconst App = () => {\r\n\tconst [attemptedConnect, setAttemptedConnect] = React.useState(false);\r\n\tconst [isFetchingNetworks, setIsFetchingNetworks] = React.useState(true);\r\n\tconst [error, setError] = React.useState('');\r\n\tconst [availableNetworks, setAvailableNetworks] = React.useState(\r\n\t\t[],\r\n\t);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tfetch('/networks')\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data.status !== 200) {\r\n\t\t\t\t\tthrow new Error(data.statusText);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data.json();\r\n\t\t\t})\r\n\t\t\t.then(setAvailableNetworks)\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tsetError(`לא נמצאו רשתות`);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsFetchingNetworks(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst onConnect = (data) => {\r\n\t\tsetAttemptedConnect(true);\r\n\t\tsetError('');\r\n\t\tconsole.log(JSON.stringify(data))\r\n\t\tfetch('/connect', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((resp) => {\r\n\t\t\t\tif (resp.status !== 200) {\r\n\t\t\t\t\tthrow new Error(resp.statusText);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tsetError(`לא היה ניתן להחבר לרשת ${e.message || e}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Provider>\r\n\t\t\t<GlobalStyle />\r\n\r\n\t\t\t<Container>\r\n\t\t\t\t<Notifications\r\n\t\t\t\t\tattemptedConnect={attemptedConnect}\r\n\t\t\t\t\thasAvailableNetworks={\r\n\t\t\t\t\t\tisFetchingNetworks || availableNetworks.length > 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t/>\r\n\t\t\t\t<NetworkInfoForm\r\n\t\t\t\t\tavailableNetworks={availableNetworks}\r\n\t\t\t\t\tonSubmit={onConnect}\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t</Provider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n",["31","32"],"C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\components\\Notifications.js",["33","34","35"],"C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\components\\NetworkInfoForm.js",["36","37","38","39","40"],"import { JSONSchema7 as JSONSchema } from 'json-schema';\r\nimport * as React from 'react';\r\nimport { Flex, Form, Heading, RenditionUiSchema } from 'rendition';\r\nimport { Network, NetworkInfo } from './App';\r\n\r\nconst getSchema = (availableNetworks) => ({\r\n\ttype: 'object',\r\n\tproperties: {\r\n\t\tssid: {\r\n\t\t\ttitle: 'שם הרשת הביתית',\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: availableNetworks[0]?.ssid,\r\n\t\t\toneOf: availableNetworks.map((network) => ({\r\n\t\t\t\tconst: network.ssid,\r\n\t\t\t\ttitle: network.ssid,\r\n\t\t\t})),\r\n\t\t},\r\n\t\tidentity: {\r\n\t\t\ttitle: 'User',\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t\tpassphrase: {\r\n\t\t\ttitle: 'סיסמה לרשת הביתית',\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t},\r\n\trequired: ['ssid'],\r\n});\r\n\r\nconst getUiSchema = (isEnterprise) => ({\r\n\tssid: {\r\n\t\t'ui:placeholder': 'בחר רשת',\r\n\t\t'ui:options': {\r\n\t\t\temphasized: true,\r\n\t\t},\r\n\t},\r\n\tidentity: {\r\n\t\t'ui:options': {\r\n\t\t\temphasized: true,\r\n\t\t},\r\n\t\t'ui:widget': !isEnterprise ? 'hidden' : undefined,\r\n\t},\r\n\tpassphrase: {\r\n\t\t'ui:widget': 'password',\r\n\t\t'ui:options': {\r\n\t\t\temphasized: true,\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst isEnterpriseNetwork = (\r\n\tnetworks,\r\n\tselectedNetworkSsid,\r\n) => {\r\n\treturn networks.some(\r\n\t\t(network) =>\r\n\t\t\tnetwork.ssid === selectedNetworkSsid && network.security === 'enterprise',\r\n\t);\r\n};\r\n\r\n\r\nexport const NetworkInfoForm = ({\r\n\tavailableNetworks,\r\n\tonSubmit,\r\n}) => {\r\n\tconst [data, setData] = React.useState({});\r\n\r\n\tconst isSelectedNetworkEnterprise = isEnterpriseNetwork(\r\n\t\tavailableNetworks,\r\n\t\tdata.ssid,\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tflexDirection=\"column\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tjustifyContent=\"center\"\r\n\t\t\tm={4}\r\n\t\t\tmt={5}\r\n\t\t>\r\n\t\t\t<Heading.h3 align=\"center\" mb={4}>\r\n\t\t\t\tאנא בחר את הרשת הביתית שלך מתוך הרשימה והכנס את הסיסמה אליה\r\n\t\t\t</Heading.h3>\r\n\r\n\t\t\t<Form\r\n\t\t\t\twidth={['100%', '80%', '60%', '40%']}\r\n\t\t\t\tonFormChange={({ formData }) => {\r\n\t\t\t\t\tsetData(formData);\r\n\t\t\t\t}}\r\n\t\t\t\tonFormSubmit={({ formData }) => onSubmit(formData)}\r\n\t\t\t\tvalue={data}\r\n\t\t\t\tschema={getSchema(availableNetworks)}\r\n\t\t\t\tuiSchema={getUiSchema(isSelectedNetworkEnterprise)}\r\n\t\t\t\tsubmitButtonProps={{\r\n\t\t\t\t\twidth: '60%',\r\n\t\t\t\t\tmx: '20%',\r\n\t\t\t\t\tmt: 3,\r\n\t\t\t\t\tdisabled: availableNetworks.length <= 0,\r\n\t\t\t\t}}\r\n\t\t\t\tsubmitButtonText={'התחבר'}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n};\r\n","C:\\Users\\avivk\\Documents\\GitHub\\scanly-ui-wifi\\src\\index.js",[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":13,"column":6,"nodeType":"51","endLine":13,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":14,"column":6,"nodeType":"51","endLine":14,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":21,"column":6,"nodeType":"51","endLine":21,"endColumn":16},{"ruleId":"41","severity":1,"message":"52","line":1,"column":25,"nodeType":"43","messageId":"44","endLine":1,"endColumn":35},{"ruleId":"41","severity":1,"message":"53","line":3,"column":31,"nodeType":"43","messageId":"44","endLine":3,"endColumn":48},{"ruleId":"41","severity":1,"message":"54","line":4,"column":10,"nodeType":"43","messageId":"44","endLine":4,"endColumn":17},{"ruleId":"41","severity":1,"message":"55","line":4,"column":19,"nodeType":"43","messageId":"44","endLine":4,"endColumn":30},{"ruleId":"49","severity":1,"message":"56","line":83,"column":4,"nodeType":"51","endLine":83,"endColumn":38},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react/jsx-pascal-case","Imported JSX component span must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'JSONSchema' is defined but never used.","'RenditionUiSchema' is defined but never used.","'Network' is defined but never used.","'NetworkInfo' is defined but never used.","Imported JSX component h3 must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]